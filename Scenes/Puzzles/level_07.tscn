[gd_scene load_steps=8 format=3 uid="uid://cpjmrbyoyfoev"]

[ext_resource type="Material" uid="uid://bat0q1dvny8kg" path="res://Shaders/outer_box_material.tres" id="1_4pb0x"]
[ext_resource type="ArrayMesh" uid="uid://dn6rybabcmhry" path="res://Geometry/level_07.obj" id="2_dgwgf"]
[ext_resource type="PackedScene" uid="uid://c0esqjhu7aanc" path="res://Scenes/puzzle_box_player.tscn" id="3_syfwe"]
[ext_resource type="PackedScene" uid="uid://bonou2nfe7to5" path="res://Prefabs/goal.tscn" id="4_slwie"]

[sub_resource type="BoxMesh" id="BoxMesh_rpyxl"]
material = ExtResource("1_4pb0x")
size = Vector3(1.1, 1.1, 1.1)

[sub_resource type="BoxShape3D" id="BoxShape3D_xbf01"]
size = Vector3(1.1, 1.1, 1.1)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_8samo"]
data = PackedVector3Array(-0.6, 0.7, 0, -0.6, 0.8, 0.1, -0.6, 0.7, 0.1, -0.6, 0.7, 0, -0.6, 0.8, 0, -0.6, 0.8, 0.1, -0.6, 1, 0, -0.6, 1.1, 0.1, -0.6, 1, 0.1, -0.6, 1, 0, -0.6, 1.1, 0, -0.6, 1.1, 0.1, -0.5, 0.9, 0.5, -0.5, 1, 0.6, -0.5, 0.9, 0.6, -0.5, 0.9, 0.5, -0.5, 1, 0.5, -0.5, 1, 0.6, -0.5, 0.9, -0.5, -0.5, 1, -0.4, -0.5, 0.9, -0.4, -0.5, 0.9, -0.5, -0.5, 1, -0.5, -0.5, 1, -0.4, -0.2, 0.4, -0.1, -0.2, 0.5, 0.1, -0.2, 0.4, 0.2, -0.2, 0.4, -0.1, -0.2, 0.5, 0, -0.2, 0.5, 0.1, -0.2, 0.5, 0.1, -0.2, 0.6, 0.1, -0.2, 0.4, 0.2, -0.2, 0.4, -0.1, -0.2, 0.6, 0, -0.2, 0.5, 0, -0.2, 0.6, 0.1, -0.2, 0.7, 0.2, -0.2, 0.4, 0.2, -0.2, 0.6, 0, -0.2, 0.7, 0.2, -0.2, 0.6, 0.1, -0.2, 0.4, -0.1, -0.2, 0.7, -0.1, -0.2, 0.6, 0, -0.2, 0.6, 0, -0.2, 0.7, -0.1, -0.2, 0.7, 0.2, -0.2, 0.8, -0.1, -0.2, 0.9, 0.1, -0.2, 0.8, 0.2, -0.2, 0.8, -0.1, -0.2, 0.9, 0, -0.2, 0.9, 0.1, -0.2, 0.9, 0.1, -0.2, 1, 0.1, -0.2, 0.8, 0.2, -0.2, 0.8, -0.1, -0.2, 1, 0, -0.2, 0.9, 0, -0.2, 0.9, -0.5, -0.2, 1, -0.3, -0.2, 0.9, -0.3, -0.2, 0.9, -0.5, -0.2, 1, -0.5, -0.2, 1, -0.3, -0.2, 1, 0.1, -0.2, 1.1, 0.2, -0.2, 0.8, 0.2, -0.2, 1, 0, -0.2, 1.1, 0.2, -0.2, 1, 0.1, -0.2, 0.8, -0.1, -0.2, 1.1, -0.1, -0.2, 1, 0, -0.2, 1, 0, -0.2, 1.1, -0.1, -0.2, 1.1, 0.2, -0.1, 0, 0, -0.1, 0.1, 0.1, -0.1, 0, 0.1, -0.1, 0, 0, -0.1, 0.1, 0, -0.1, 0.1, 0.1, -0.1, 0.5, 0.5, -0.1, 0.6, 0.6, -0.1, 0.5, 0.6, -0.1, 0.5, 0.5, -0.1, 0.6, 0.5, -0.1, 0.6, 0.6, -0.1, 0.5, -0.5, -0.1, 0.6, -0.4, -0.1, 0.5, -0.4, -0.1, 0.5, -0.5, -0.1, 0.6, -0.5, -0.1, 0.6, -0.4, 0, 0.4, 0, 0, 0.5, 0.1, 0, 0.4, 0.1, 0, 0.4, 0, 0, 0.5, 0, 0, 0.5, 0.1, 0, 0.5, 0.1, 0, 0.6, 0.2, 0, 0.5, 0.2, 0, 0.5, 0.1, 0, 0.6, 0.1, 0, 0.6, 0.2, 0, 0.5, -0.1, 0, 0.6, 0, 0, 0.5, 0, 0, 0.5, -0.1, 0, 0.6, -0.1, 0, 0.6, 0, 0, 0.8, 0, 0, 0.9, 0.1, 0, 0.8, 0.1, 0, 0.8, 0, 0, 0.9, 0, 0, 0.9, 0.1, 0, 0.9, -0.1, 0, 1, 0, 0, 0.9, 0, 0, 0.9, -0.1, 0, 1, -0.1, 0, 1, 0, 0.3, 0.8, 0, 0.3, 0.9, 0.1, 0.3, 0.8, 0.1, 0.3, 0.8, 0, 0.3, 0.9, 0, 0.3, 0.9, 0.1, 0.3, 0.9, 0.5, 0.3, 1, 0.6, 0.3, 0.9, 0.6, 0.3, 0.9, 0.5, 0.3, 1, 0.5, 0.3, 1, 0.6, 0.3, 0.9, -0.5, 0.3, 1, -0.4, 0.3, 0.9, -0.4, 0.3, 0.9, -0.5, 0.3, 1, -0.5, 0.3, 1, -0.4, 0.4, 0.5, 0, 0.4, 0.6, 0.1, 0.4, 0.5, 0.1, 0.4, 0.5, 0, 0.4, 0.6, 0, 0.4, 0.6, 0.1, 0.4, 0.9, 0, 0.4, 1, 0.1, 0.4, 0.9, 0.1, 0.4, 0.9, 0, 0.4, 1, 0, 0.4, 1, 0.1, -0.5, 0.7, 0, -0.5, 0.7, 0.1, -0.5, 0.8, 0.1, -0.5, 0.7, 0, -0.5, 0.8, 0.1, -0.5, 0.8, 0, -0.4, 0.9, 0.5, -0.4, 0.9, 0.6, -0.4, 1, 0.6, -0.4, 0.9, 0.5, -0.4, 1, 0.6, -0.4, 1, 0.5, -0.4, 0.9, -0.5, -0.4, 0.9, -0.4, -0.4, 1, -0.4, -0.4, 0.9, -0.5, -0.4, 1, -0.4, -0.4, 1, -0.5, -0.4, 1, 0, -0.4, 1, 0.1, -0.4, 1.1, 0.1, -0.4, 1, 0, -0.4, 1.1, 0.1, -0.4, 1.1, 0, -0.1, 0.4, 0, -0.1, 0.4, 0.1, -0.1, 0.5, 0.1, -0.1, 0.4, 0, -0.1, 0.5, 0.1, -0.1, 0.5, 0, -0.1, 0.5, 0.1, -0.1, 0.5, 0.2, -0.1, 0.6, 0.2, -0.1, 0.5, 0.1, -0.1, 0.6, 0.2, -0.1, 0.6, 0.1, -0.1, 0.5, -0.1, -0.1, 0.5, 0, -0.1, 0.6, 0, -0.1, 0.5, -0.1, -0.1, 0.6, 0, -0.1, 0.6, -0.1, -0.1, 0.8, 0, -0.1, 0.8, 0.1, -0.1, 0.9, 0.1, -0.1, 0.8, 0, -0.1, 0.9, 0.1, -0.1, 0.9, 0, -0.1, 0.9, -0.1, -0.1, 0.9, 0, -0.1, 1, 0, -0.1, 0.9, -0.1, -0.1, 1, 0, -0.1, 1, -0.1, -0.1, 0.9, -0.5, -0.1, 0.9, -0.3, -0.1, 1, -0.3, -0.1, 0.9, -0.5, -0.1, 1, -0.3, -0.1, 1, -0.5, 0, 0, 0, 0, 0, 0.1, 0, 0.1, 0.1, 0, 0, 0, 0, 0.1, 0.1, 0, 0.1, 0, 0, 0.5, 0.5, 0, 0.5, 0.6, 0, 0.6, 0.6, 0, 0.5, 0.5, 0, 0.6, 0.6, 0, 0.6, 0.5, 0, 0.5, -0.5, 0, 0.5, -0.4, 0, 0.6, -0.4, 0, 0.5, -0.5, 0, 0.6, -0.4, 0, 0.6, -0.5, 0.1, 0.4, -0.1, 0.1, 0.4, 0.2, 0.1, 0.5, 0.1, 0.1, 0.4, -0.1, 0.1, 0.5, 0.1, 0.1, 0.5, 0, 0.1, 0.5, 0.1, 0.1, 0.4, 0.2, 0.1, 0.6, 0.1, 0.1, 0.4, -0.1, 0.1, 0.5, 0, 0.1, 0.6, 0, 0.1, 0.6, 0.1, 0.1, 0.4, 0.2, 0.1, 0.7, 0.2, 0.1, 0.6, 0, 0.1, 0.6, 0.1, 0.1, 0.7, 0.2, 0.1, 0.4, -0.1, 0.1, 0.6, 0, 0.1, 0.7, -0.1, 0.1, 0.6, 0, 0.1, 0.7, 0.2, 0.1, 0.7, -0.1, 0.1, 0.8, -0.1, 0.1, 0.8, 0.2, 0.1, 0.9, 0.1, 0.1, 0.8, -0.1, 0.1, 0.9, 0.1, 0.1, 0.9, 0, 0.1, 0.9, 0.1, 0.1, 0.8, 0.2, 0.1, 1, 0.1, 0.1, 0.8, -0.1, 0.1, 0.9, 0, 0.1, 1, 0, 0.1, 1, 0.1, 0.1, 0.8, 0.2, 0.1, 1.1, 0.2, 0.1, 1, 0, 0.1, 1, 0.1, 0.1, 1.1, 0.2, 0.1, 0.8, -0.1, 0.1, 1, 0, 0.1, 1.1, -0.1, 0.1, 1, 0, 0.1, 1.1, 0.2, 0.1, 1.1, -0.1, 0.4, 0.9, 0.5, 0.4, 0.9, 0.6, 0.4, 1, 0.6, 0.4, 0.9, 0.5, 0.4, 1, 0.6, 0.4, 1, 0.5, 0.4, 0.9, -0.5, 0.4, 0.9, -0.4, 0.4, 1, -0.4, 0.4, 0.9, -0.5, 0.4, 1, -0.4, 0.4, 1, -0.5, 0.5, 0.5, 0, 0.5, 0.5, 0.1, 0.5, 0.6, 0.1, 0.5, 0.5, 0, 0.5, 0.6, 0.1, 0.5, 0.6, 0, 0.5, 0.8, 0, 0.5, 0.8, 0.1, 0.5, 1, 0.1, 0.5, 0.8, 0, 0.5, 1, 0.1, 0.5, 1, 0, -0.5, 1, 0.6, -0.4, 0.9, 0.6, -0.5, 0.9, 0.6, -0.5, 1, 0.6, -0.4, 1, 0.6, -0.4, 0.9, 0.6, -0.1, 0.6, 0.6, 0, 0.5, 0.6, -0.1, 0.5, 0.6, -0.1, 0.6, 0.6, 0, 0.6, 0.6, 0, 0.5, 0.6, 0.3, 1, 0.6, 0.4, 0.9, 0.6, 0.3, 0.9, 0.6, 0.3, 1, 0.6, 0.4, 1, 0.6, 0.4, 0.9, 0.6, -0.2, 0.7, 0.2, -0.1, 0.5, 0.2, -0.2, 0.4, 0.2, -0.2, 0.7, 0.2, -0.1, 0.6, 0.2, -0.1, 0.5, 0.2, -0.1, 0.5, 0.2, 0, 0.5, 0.2, -0.2, 0.4, 0.2, -0.2, 0.7, 0.2, 0, 0.6, 0.2, -0.1, 0.6, 0.2, 0, 0.5, 0.2, 0.1, 0.4, 0.2, -0.2, 0.4, 0.2, 0, 0.6, 0.2, 0.1, 0.4, 0.2, 0, 0.5, 0.2, -0.2, 0.7, 0.2, 0.1, 0.7, 0.2, 0, 0.6, 0.2, 0, 0.6, 0.2, 0.1, 0.7, 0.2, 0.1, 0.4, 0.2, -0.2, 1.1, 0.2, 0.1, 0.8, 0.2, -0.2, 0.8, 0.2, -0.2, 1.1, 0.2, 0.1, 1.1, 0.2, 0.1, 0.8, 0.2, -0.6, 0.8, 0.1, -0.5, 0.7, 0.1, -0.6, 0.7, 0.1, -0.6, 0.8, 0.1, -0.5, 0.8, 0.1, -0.5, 0.7, 0.1, -0.6, 1.1, 0.1, -0.4, 1, 0.1, -0.6, 1, 0.1, -0.6, 1.1, 0.1, -0.4, 1.1, 0.1, -0.4, 1, 0.1, -0.1, 0.1, 0.1, 0, 0, 0.1, -0.1, 0, 0.1, -0.1, 0.1, 0.1, 0, 0.1, 0.1, 0, 0, 0.1, 0.3, 0.9, 0.1, 0.4, 0.9, 0.1, 0.3, 0.8, 0.1, 0.4, 0.6, 0.1, 0.5, 0.5, 0.1, 0.4, 0.5, 0.1, 0.4, 0.6, 0.1, 0.5, 0.6, 0.1, 0.5, 0.5, 0.1, 0.4, 1, 0.1, 0.5, 0.8, 0.1, 0.4, 0.9, 0.1, 0.4, 0.9, 0.1, 0.5, 0.8, 0.1, 0.3, 0.8, 0.1, 0.4, 1, 0.1, 0.5, 1, 0.1, 0.5, 0.8, 0.1, -0.2, 0.6, 0, -0.1, 0.5, 0, -0.2, 0.5, 0, -0.2, 0.6, 0, -0.1, 0.6, 0, -0.1, 0.5, 0, -0.2, 1, 0, -0.1, 0.9, 0, -0.2, 0.9, 0, -0.2, 1, 0, -0.1, 1, 0, -0.1, 0.9, 0, -0.1, 0.5, 0, 0, 0.4, 0, -0.1, 0.4, 0, -0.1, 0.5, 0, 0, 0.5, 0, 0, 0.4, 0, -0.1, 0.9, 0, 0, 0.8, 0, -0.1, 0.8, 0, -0.1, 0.9, 0, 0, 0.9, 0, 0, 0.8, 0, 0, 0.6, 0, 0.1, 0.5, 0, 0, 0.5, 0, 0, 0.6, 0, 0.1, 0.6, 0, 0.1, 0.5, 0, 0, 1, 0, 0.1, 0.9, 0, 0, 0.9, 0, 0, 1, 0, 0.1, 1, 0, 0.1, 0.9, 0, -0.2, 1, -0.3, -0.1, 0.9, -0.3, -0.2, 0.9, -0.3, -0.2, 1, -0.3, -0.1, 1, -0.3, -0.1, 0.9, -0.3, -0.5, 1, -0.4, -0.4, 0.9, -0.4, -0.5, 0.9, -0.4, -0.5, 1, -0.4, -0.4, 1, -0.4, -0.4, 0.9, -0.4, -0.1, 0.6, -0.4, 0, 0.5, -0.4, -0.1, 0.5, -0.4, -0.1, 0.6, -0.4, 0, 0.6, -0.4, 0, 0.5, -0.4, 0.3, 1, -0.4, 0.4, 0.9, -0.4, 0.3, 0.9, -0.4, 0.3, 1, -0.4, 0.4, 1, -0.4, 0.4, 0.9, -0.4, -0.5, 1, 0.5, -0.5, 0.9, 0.5, -0.4, 0.9, 0.5, -0.5, 1, 0.5, -0.4, 0.9, 0.5, -0.4, 1, 0.5, -0.1, 0.6, 0.5, -0.1, 0.5, 0.5, 0, 0.5, 0.5, -0.1, 0.6, 0.5, 0, 0.5, 0.5, 0, 0.6, 0.5, 0.3, 1, 0.5, 0.3, 0.9, 0.5, 0.4, 0.9, 0.5, 0.3, 1, 0.5, 0.4, 0.9, 0.5, 0.4, 1, 0.5, -0.2, 0.6, 0.1, -0.2, 0.5, 0.1, -0.1, 0.5, 0.1, -0.2, 0.6, 0.1, -0.1, 0.5, 0.1, -0.1, 0.6, 0.1, -0.2, 1, 0.1, -0.2, 0.9, 0.1, -0.1, 0.9, 0.1, -0.1, 0.5, 0.1, -0.1, 0.4, 0.1, 0, 0.4, 0.1, -0.1, 0.5, 0.1, 0, 0.4, 0.1, 0, 0.5, 0.1, -0.1, 0.9, 0.1, -0.1, 0.8, 0.1, 0, 0.8, 0.1, -0.2, 1, 0.1, -0.1, 0.9, 0.1, 0, 0.9, 0.1, -0.1, 0.9, 0.1, 0, 0.8, 0.1, 0, 0.9, 0.1, 0, 0.6, 0.1, 0, 0.5, 0.1, 0.1, 0.5, 0.1, 0, 0.6, 0.1, 0.1, 0.5, 0.1, 0.1, 0.6, 0.1, -0.2, 1, 0.1, 0, 0.9, 0.1, 0.1, 0.9, 0.1, -0.2, 1, 0.1, 0.1, 0.9, 0.1, 0.1, 1, 0.1, -0.6, 0.8, 0, -0.6, 0.7, 0, -0.5, 0.7, 0, -0.6, 0.8, 0, -0.5, 0.7, 0, -0.5, 0.8, 0, -0.6, 1.1, 0, -0.6, 1, 0, -0.4, 1, 0, -0.6, 1.1, 0, -0.4, 1, 0, -0.4, 1.1, 0, -0.1, 0.1, 0, -0.1, 0, 0, 0, 0, 0, -0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0, 0.3, 0.9, 0, 0.3, 0.8, 0, 0.4, 0.9, 0, 0.4, 0.6, 0, 0.4, 0.5, 0, 0.5, 0.5, 0, 0.4, 0.6, 0, 0.5, 0.5, 0, 0.5, 0.6, 0, 0.4, 1, 0, 0.4, 0.9, 0, 0.5, 0.8, 0, 0.4, 0.9, 0, 0.3, 0.8, 0, 0.5, 0.8, 0, 0.4, 1, 0, 0.5, 0.8, 0, 0.5, 1, 0, -0.2, 0.7, -0.1, -0.2, 0.4, -0.1, -0.1, 0.5, -0.1, -0.2, 0.7, -0.1, -0.1, 0.5, -0.1, -0.1, 0.6, -0.1, -0.2, 1.1, -0.1, -0.2, 0.8, -0.1, -0.1, 0.9, -0.1, -0.2, 1.1, -0.1, -0.1, 0.9, -0.1, -0.1, 1, -0.1, -0.1, 0.5, -0.1, -0.2, 0.4, -0.1, 0, 0.5, -0.1, -0.2, 0.7, -0.1, -0.1, 0.6, -0.1, 0, 0.6, -0.1, -0.1, 0.9, -0.1, -0.2, 0.8, -0.1, 0, 0.9, -0.1, -0.2, 1.1, -0.1, -0.1, 1, -0.1, 0, 1, -0.1, 0, 0.5, -0.1, -0.2, 0.4, -0.1, 0.1, 0.4, -0.1, 0, 0.6, -0.1, 0, 0.5, -0.1, 0.1, 0.4, -0.1, -0.2, 0.7, -0.1, 0, 0.6, -0.1, 0.1, 0.7, -0.1, 0, 0.6, -0.1, 0.1, 0.4, -0.1, 0.1, 0.7, -0.1, 0, 1, -0.1, 0, 0.9, -0.1, 0.1, 0.8, -0.1, 0, 0.9, -0.1, -0.2, 0.8, -0.1, 0.1, 0.8, -0.1, -0.2, 1.1, -0.1, 0, 1, -0.1, 0.1, 1.1, -0.1, 0, 1, -0.1, 0.1, 0.8, -0.1, 0.1, 1.1, -0.1, -0.5, 1, -0.5, -0.5, 0.9, -0.5, -0.4, 0.9, -0.5, -0.5, 1, -0.5, -0.4, 0.9, -0.5, -0.4, 1, -0.5, -0.2, 1, -0.5, -0.2, 0.9, -0.5, -0.1, 0.9, -0.5, -0.2, 1, -0.5, -0.1, 0.9, -0.5, -0.1, 1, -0.5, -0.1, 0.6, -0.5, -0.1, 0.5, -0.5, 0, 0.5, -0.5, -0.1, 0.6, -0.5, 0, 0.5, -0.5, 0, 0.6, -0.5, 0.3, 1, -0.5, 0.3, 0.9, -0.5, 0.4, 0.9, -0.5, 0.3, 1, -0.5, 0.4, 0.9, -0.5, 0.4, 1, -0.5, 0, 0, 0.1, -0.1, 0, 0, -0.1, 0, 0.1, 0, 0, 0.1, 0, 0, 0, -0.1, 0, 0, 0.1, 0.4, 0.2, -0.1, 0.4, 0.1, -0.2, 0.4, 0.2, 0.1, 0.4, 0.2, 0, 0.4, 0.1, -0.1, 0.4, 0.1, -0.1, 0.4, 0.1, -0.1, 0.4, 0, -0.2, 0.4, 0.2, 0.1, 0.4, 0.2, 0, 0.4, 0, 0, 0.4, 0.1, -0.1, 0.4, 0, -0.2, 0.4, -0.1, -0.2, 0.4, 0.2, 0, 0.4, 0, -0.2, 0.4, -0.1, -0.1, 0.4, 0, 0.1, 0.4, 0.2, 0.1, 0.4, -0.1, 0, 0.4, 0, 0, 0.4, 0, 0.1, 0.4, -0.1, -0.2, 0.4, -0.1, 0, 0.5, 0.6, -0.1, 0.5, 0.5, -0.1, 0.5, 0.6, 0, 0.5, 0.6, 0, 0.5, 0.5, -0.1, 0.5, 0.5, 0.5, 0.5, 0.1, 0.4, 0.5, 0, 0.4, 0.5, 0.1, 0.5, 0.5, 0.1, 0.5, 0.5, 0, 0.4, 0.5, 0, 0, 0.5, -0.4, -0.1, 0.5, -0.5, -0.1, 0.5, -0.4, 0, 0.5, -0.4, 0, 0.5, -0.5, -0.1, 0.5, -0.5, 0, 0.6, 0.2, -0.1, 0.6, 0.1, -0.1, 0.6, 0.2, 0, 0.6, 0.2, 0, 0.6, 0.1, -0.1, 0.6, 0.1, -0.1, 0.6, 0.1, -0.2, 0.6, 0, -0.2, 0.6, 0.1, 0.1, 0.6, 0.1, -0.2, 0.6, 0, 0, 0.6, 0.1, 0, 0.6, 0.1, -0.2, 0.6, 0, -0.1, 0.6, 0.1, 0.1, 0.6, 0.1, -0.1, 0.6, 0, -0.2, 0.6, 0, 0.1, 0.6, 0.1, 0, 0.6, 0, -0.1, 0.6, 0, 0.1, 0.6, 0.1, 0.1, 0.6, 0, 0, 0.6, 0, 0, 0.6, 0, -0.1, 0.6, -0.1, -0.1, 0.6, 0, 0, 0.6, 0, 0, 0.6, -0.1, -0.1, 0.6, -0.1, -0.5, 0.7, 0.1, -0.6, 0.7, 0, -0.6, 0.7, 0.1, -0.5, 0.7, 0.1, -0.5, 0.7, 0, -0.6, 0.7, 0, 0.1, 0.8, 0.2, -0.1, 0.8, 0.1, -0.2, 0.8, 0.2, 0.1, 0.8, 0.2, 0, 0.8, 0.1, -0.1, 0.8, 0.1, -0.1, 0.8, 0.1, -0.1, 0.8, 0, -0.2, 0.8, 0.2, 0.1, 0.8, 0.2, 0, 0.8, 0, 0, 0.8, 0.1, 0.5, 0.8, 0.1, 0.3, 0.8, 0, 0.3, 0.8, 0.1, 0.5, 0.8, 0.1, 0.5, 0.8, 0, 0.3, 0.8, 0, 0, 0.8, 0, -0.2, 0.8, -0.1, -0.1, 0.8, 0, -0.1, 0.8, 0, -0.2, 0.8, -0.1, -0.2, 0.8, 0.2, 0.1, 0.8, 0.2, 0.1, 0.8, -0.1, 0, 0.8, 0, 0, 0.8, 0, 0.1, 0.8, -0.1, -0.2, 0.8, -0.1, -0.4, 0.9, 0.6, -0.5, 0.9, 0.5, -0.5, 0.9, 0.6, -0.4, 0.9, 0.6, -0.4, 0.9, 0.5, -0.5, 0.9, 0.5, 0.4, 0.9, 0.6, 0.3, 0.9, 0.5, 0.3, 0.9, 0.6, 0.4, 0.9, 0.6, 0.4, 0.9, 0.5, 0.3, 0.9, 0.5, -0.4, 0.9, -0.4, -0.5, 0.9, -0.5, -0.5, 0.9, -0.4, -0.4, 0.9, -0.4, -0.4, 0.9, -0.5, -0.5, 0.9, -0.5, -0.1, 0.9, -0.3, -0.2, 0.9, -0.5, -0.2, 0.9, -0.3, -0.1, 0.9, -0.3, -0.1, 0.9, -0.5, -0.2, 0.9, -0.5, 0.4, 0.9, -0.4, 0.3, 0.9, -0.5, 0.3, 0.9, -0.4, 0.4, 0.9, -0.4, 0.4, 0.9, -0.5, 0.3, 0.9, -0.5, -0.4, 1, 0.1, -0.6, 1, 0, -0.6, 1, 0.1, -0.4, 1, 0.1, -0.4, 1, 0, -0.6, 1, 0, 0.1, 1, 0.1, -0.2, 1, 0, -0.2, 1, 0.1, 0.1, 1, 0.1, -0.1, 1, 0, -0.2, 1, 0, 0.1, 1, 0.1, 0, 1, 0, -0.1, 1, 0, 0.1, 1, 0.1, 0.1, 1, 0, 0, 1, 0, 0, 1, 0, -0.1, 1, -0.1, -0.1, 1, 0, 0, 1, 0, 0, 1, -0.1, -0.1, 1, -0.1, 0, 0.1, 0.1, -0.1, 0.1, 0.1, -0.1, 0.1, 0, 0, 0.1, 0.1, -0.1, 0.1, 0, 0, 0.1, 0, 0, 0.5, 0.2, -0.1, 0.5, 0.2, -0.1, 0.5, 0.1, 0, 0.5, 0.2, -0.1, 0.5, 0.1, 0, 0.5, 0.1, -0.1, 0.5, 0.1, -0.2, 0.5, 0.1, -0.2, 0.5, 0, -0.1, 0.5, 0.1, -0.2, 0.5, 0, -0.1, 0.5, 0, 0.1, 0.5, 0.1, 0, 0.5, 0.1, 0, 0.5, 0, 0.1, 0.5, 0.1, 0, 0.5, 0, 0.1, 0.5, 0, 0, 0.5, 0, -0.1, 0.5, 0, -0.1, 0.5, -0.1, 0, 0.5, 0, -0.1, 0.5, -0.1, 0, 0.5, -0.1, 0, 0.6, 0.6, -0.1, 0.6, 0.6, -0.1, 0.6, 0.5, 0, 0.6, 0.6, -0.1, 0.6, 0.5, 0, 0.6, 0.5, 0.5, 0.6, 0.1, 0.4, 0.6, 0.1, 0.4, 0.6, 0, 0.5, 0.6, 0.1, 0.4, 0.6, 0, 0.5, 0.6, 0, 0, 0.6, -0.4, -0.1, 0.6, -0.4, -0.1, 0.6, -0.5, 0, 0.6, -0.4, -0.1, 0.6, -0.5, 0, 0.6, -0.5, 0.1, 0.7, 0.2, -0.2, 0.7, 0.2, -0.2, 0.7, -0.1, 0.1, 0.7, 0.2, -0.2, 0.7, -0.1, 0.1, 0.7, -0.1, -0.5, 0.8, 0.1, -0.6, 0.8, 0.1, -0.6, 0.8, 0, -0.5, 0.8, 0.1, -0.6, 0.8, 0, -0.5, 0.8, 0, -0.1, 0.9, 0.1, -0.2, 0.9, 0.1, -0.2, 0.9, 0, -0.1, 0.9, 0.1, -0.2, 0.9, 0, -0.1, 0.9, 0, 0.1, 0.9, 0.1, 0, 0.9, 0.1, 0, 0.9, 0, 0.1, 0.9, 0.1, 0, 0.9, 0, 0.1, 0.9, 0, 0.4, 0.9, 0.1, 0.3, 0.9, 0.1, 0.3, 0.9, 0, 0.4, 0.9, 0.1, 0.3, 0.9, 0, 0.4, 0.9, 0, 0, 0.9, 0, -0.1, 0.9, 0, -0.1, 0.9, -0.1, 0, 0.9, 0, -0.1, 0.9, -0.1, 0, 0.9, -0.1, -0.4, 1, 0.6, -0.5, 1, 0.6, -0.5, 1, 0.5, -0.4, 1, 0.6, -0.5, 1, 0.5, -0.4, 1, 0.5, 0.4, 1, 0.6, 0.3, 1, 0.6, 0.3, 1, 0.5, 0.4, 1, 0.6, 0.3, 1, 0.5, 0.4, 1, 0.5, 0.5, 1, 0.1, 0.4, 1, 0.1, 0.4, 1, 0, 0.5, 1, 0.1, 0.4, 1, 0, 0.5, 1, 0, -0.4, 1, -0.4, -0.5, 1, -0.4, -0.5, 1, -0.5, -0.4, 1, -0.4, -0.5, 1, -0.5, -0.4, 1, -0.5, -0.1, 1, -0.3, -0.2, 1, -0.3, -0.2, 1, -0.5, -0.1, 1, -0.3, -0.2, 1, -0.5, -0.1, 1, -0.5, 0.4, 1, -0.4, 0.3, 1, -0.4, 0.3, 1, -0.5, 0.4, 1, -0.4, 0.3, 1, -0.5, 0.4, 1, -0.5, -0.4, 1.1, 0.1, -0.6, 1.1, 0.1, -0.6, 1.1, 0, -0.4, 1.1, 0.1, -0.6, 1.1, 0, -0.4, 1.1, 0, 0.1, 1.1, 0.2, -0.2, 1.1, 0.2, -0.2, 1.1, -0.1, 0.1, 1.1, 0.2, -0.2, 1.1, -0.1, 0.1, 1.1, -0.1)

[node name="PuzzleBox" type="Area3D"]

[node name="Outer Box" type="MeshInstance3D" parent="."]
mesh = SubResource("BoxMesh_rpyxl")
skeleton = NodePath("../PuzzleGeometry")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("BoxShape3D_xbf01")

[node name="PuzzleGeometry" type="StaticBody3D" parent="."]

[node name="MeshInstance3D" type="MeshInstance3D" parent="PuzzleGeometry"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.05, -0.55, -0.05)
mesh = ExtResource("2_dgwgf")

[node name="CollisionShape3D" type="CollisionShape3D" parent="PuzzleGeometry"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.05, -0.55, -0.05)
shape = SubResource("ConcavePolygonShape3D_8samo")

[node name="Player" parent="." instance=ExtResource("3_syfwe")]
freeze = true

[node name="Goal" parent="." instance=ExtResource("4_slwie")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3.72529e-09, 0.2, 0)

[connection signal="body_shape_exited" from="." to="." method="_on_body_shape_exited"]
[connection signal="puzzle_complete" from="Goal" to="." method="_on_goal_puzzle_complete"]
