[gd_scene load_steps=11 format=3 uid="uid://w8imssnhdjig"]

[ext_resource type="Material" uid="uid://d26unq8uckvjy" path="res://Shaders/space_skybox.tres" id="1_8s33p"]
[ext_resource type="Script" path="res://Scripts/PuzzleBox.gd" id="1_f23ct"]
[ext_resource type="Script" path="res://Scripts/PuzzleBoxCamera.gd" id="2_3wgyy"]
[ext_resource type="PackedScene" uid="uid://c0esqjhu7aanc" path="res://Scenes/puzzle_box_player.tscn" id="2_201jb"]
[ext_resource type="ArrayMesh" uid="uid://dg6q6wowk2sod" path="res://Geometry/cube_test.obj" id="3_6wrra"]
[ext_resource type="PackedScene" uid="uid://bonou2nfe7to5" path="res://Prefabs/goal.tscn" id="5_upn66"]

[sub_resource type="Sky" id="Sky_lihpv"]
sky_material = ExtResource("1_8s33p")

[sub_resource type="Environment" id="Environment_iay8a"]
background_mode = 2
background_color = Color(1, 1, 1, 1)
background_energy_multiplier = 6.0
sky = SubResource("Sky_lihpv")
sky_custom_fov = 50.0
tonemap_mode = 2
ssao_enabled = true
sdfgi_enabled = true
sdfgi_use_occlusion = true
fog_sky_affect = 0.0

[sub_resource type="BoxShape3D" id="BoxShape3D_xbf01"]
size = Vector3(1.1, 1.1, 1.1)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_1gp36"]
data = PackedVector3Array(-0.6, 0, -0.5, -0.6, 0.1, 0.5, -0.6, 0, 0.6, -0.6, 0, -0.5, -0.6, 0.1, -0.4, -0.6, 0.1, 0.5, -0.6, 0.5, 0, -0.6, 0.6, 0.1, -0.6, 0.5, 0.1, -0.6, 0.5, 0, -0.6, 0.6, 0, -0.6, 0.6, 0.1, -0.6, 0.1, 0.5, -0.6, 1, 0.5, -0.6, 0, 0.6, -0.6, 0.9, 0, -0.6, 1, 0.1, -0.6, 0.9, 0.1, -0.6, 0.9, 0, -0.6, 1, 0, -0.6, 1, 0.1, -0.6, 0, -0.5, -0.6, 1, -0.4, -0.6, 0.1, -0.4, -0.6, 1, 0.5, -0.6, 1.1, 0.6, -0.6, 0, 0.6, -0.6, 1, -0.4, -0.6, 1.1, 0.6, -0.6, 1, 0, -0.6, 1, 0, -0.6, 1.1, 0.6, -0.6, 1, 0.1, -0.6, 1, 0.1, -0.6, 1.1, 0.6, -0.6, 1, 0.5, -0.6, 0, -0.5, -0.6, 1.1, -0.5, -0.6, 1, -0.4, -0.6, 1, -0.4, -0.6, 1.1, -0.5, -0.6, 1.1, 0.6, -0.4, 0.6, -0.4, -0.4, 0.7, -0.3, -0.4, 0.6, -0.3, -0.4, 0.6, -0.4, -0.4, 0.7, -0.4, -0.4, 0.7, -0.3, -0.2, 0, -0.1, -0.2, 0.1, 0.2, -0.2, 0, 0.2, -0.2, 0, -0.1, -0.2, 0.1, -0.1, -0.2, 0.1, 0.2, -0.2, 1, -0.1, -0.2, 1.1, 0.2, -0.2, 1, 0.2, -0.2, 1, -0.1, -0.2, 1.1, -0.1, -0.2, 1.1, 0.2, 0.1, 0.6, -0.5, 0.1, 0.7, -0.4, 0.1, 0.6, -0.4, 0.1, 0.6, -0.5, 0.1, 0.7, -0.5, 0.1, 0.7, -0.4, 0.2, 0.6, 0, 0.2, 0.7, 0.1, 0.2, 0.6, 0.1, 0.2, 0.6, 0, 0.2, 0.7, 0, 0.2, 0.7, 0.1, 0.4, 0, -0.4, 0.4, 0.1, 0.5, 0.4, 0, 0.5, 0.4, 0, -0.4, 0.4, 0.1, -0.4, 0.4, 0.1, 0.5, 0.4, 0.1, 0.5, 0.4, 1, 0.6, 0.4, 0.1, 0.6, 0.4, 0.1, 0.5, 0.4, 1, 0.5, 0.4, 1, 0.6, 0.4, 0.1, -0.5, 0.4, 1, -0.4, 0.4, 0.1, -0.4, 0.4, 0.1, -0.5, 0.4, 1, -0.5, 0.4, 1, -0.4, 0.4, 1, -0.4, 0.4, 1.1, 0.5, 0.4, 1, 0.5, 0.4, 1, -0.4, 0.4, 1.1, -0.4, 0.4, 1.1, 0.5, -0.5, 0, -0.4, -0.5, 0, 0.5, -0.5, 0.1, 0.5, -0.5, 0, -0.4, -0.5, 0.1, 0.5, -0.5, 0.1, -0.4, -0.5, 0.1, -0.5, -0.5, 0.1, -0.4, -0.5, 0.6, -0.4, -0.5, 0.1, -0.5, -0.5, 0.6, -0.4, -0.5, 0.6, -0.5, -0.5, 0.1, 0.5, -0.5, 0.1, 0.6, -0.5, 1, 0.6, -0.5, 0.1, 0.5, -0.5, 1, 0.6, -0.5, 1, 0.5, -0.5, 0.9, 0, -0.5, 0.9, 0.1, -0.5, 1, 0.1, -0.5, 0.9, 0, -0.5, 1, 0.1, -0.5, 1, 0, -0.5, 0.7, -0.5, -0.5, 0.7, -0.4, -0.5, 1, -0.4, -0.5, 0.7, -0.5, -0.5, 1, -0.4, -0.5, 1, -0.5, -0.5, 1, 0, -0.5, 1, 0.1, -0.5, 1.1, 0.5, -0.5, 1, -0.4, -0.5, 1, 0, -0.5, 1.1, 0.5, -0.5, 1, 0.1, -0.5, 1, 0.5, -0.5, 1.1, 0.5, -0.5, 1, -0.4, -0.5, 1.1, 0.5, -0.5, 1.1, -0.4, -0.4, 0.5, 0, -0.4, 0.5, 0.1, -0.4, 0.6, 0.1, -0.4, 0.5, 0, -0.4, 0.6, 0.1, -0.4, 0.6, 0, -0.3, 0.6, -0.4, -0.3, 0.6, -0.3, -0.3, 0.7, -0.3, -0.3, 0.6, -0.4, -0.3, 0.7, -0.3, -0.3, 0.7, -0.4, -0.2, 0.6, -0.5, -0.2, 0.6, -0.4, -0.2, 0.7, -0.4, -0.2, 0.6, -0.5, -0.2, 0.7, -0.4, -0.2, 0.7, -0.5, 0.1, 0, -0.1, 0.1, 0, 0.2, 0.1, 0.1, 0.2, 0.1, 0, -0.1, 0.1, 0.1, 0.2, 0.1, 0.1, -0.1, 0.1, 1, -0.1, 0.1, 1, 0.2, 0.1, 1.1, 0.2, 0.1, 1, -0.1, 0.1, 1.1, 0.2, 0.1, 1.1, -0.1, 0.2, 0.6, -0.5, 0.2, 0.6, -0.4, 0.2, 0.7, -0.4, 0.2, 0.6, -0.5, 0.2, 0.7, -0.4, 0.2, 0.7, -0.5, 0.5, 0, -0.5, 0.5, 0, 0.6, 0.5, 0.1, 0.5, 0.5, 0, -0.5, 0.5, 0.1, 0.5, 0.5, 0.1, -0.4, 0.5, 0.6, 0, 0.5, 0.6, 0.1, 0.5, 0.7, 0.1, 0.5, 0.6, 0, 0.5, 0.7, 0.1, 0.5, 0.7, 0, 0.5, 0.1, 0.5, 0.5, 0, 0.6, 0.5, 1, 0.5, 0.5, 0, -0.5, 0.5, 0.1, -0.4, 0.5, 1, -0.4, 0.5, 1, 0.5, 0.5, 0, 0.6, 0.5, 1.1, 0.6, 0.5, 1, -0.4, 0.5, 1, 0.5, 0.5, 1.1, 0.6, 0.5, 0, -0.5, 0.5, 1, -0.4, 0.5, 1.1, -0.5, 0.5, 1, -0.4, 0.5, 1.1, 0.6, 0.5, 1.1, -0.5, -0.6, 1.1, 0.6, -0.5, 0.1, 0.6, -0.6, 0, 0.6, -0.6, 1.1, 0.6, -0.5, 1, 0.6, -0.5, 0.1, 0.6, -0.5, 0.1, 0.6, 0.4, 0.1, 0.6, -0.6, 0, 0.6, -0.6, 1.1, 0.6, 0.4, 1, 0.6, -0.5, 1, 0.6, 0.4, 0.1, 0.6, 0.5, 0, 0.6, -0.6, 0, 0.6, 0.4, 1, 0.6, 0.5, 0, 0.6, 0.4, 0.1, 0.6, -0.6, 1.1, 0.6, 0.5, 1.1, 0.6, 0.4, 1, 0.6, 0.4, 1, 0.6, 0.5, 1.1, 0.6, 0.5, 0, 0.6, -0.2, 0.1, 0.2, 0.1, 0, 0.2, -0.2, 0, 0.2, -0.2, 0.1, 0.2, 0.1, 0.1, 0.2, 0.1, 0, 0.2, -0.2, 1.1, 0.2, 0.1, 1, 0.2, -0.2, 1, 0.2, -0.2, 1.1, 0.2, 0.1, 1.1, 0.2, 0.1, 1, 0.2, -0.6, 1, 0.1, -0.5, 0.9, 0.1, -0.6, 0.9, 0.1, -0.6, 1, 0.1, -0.5, 1, 0.1, -0.5, 0.9, 0.1, -0.6, 0.6, 0.1, -0.4, 0.5, 0.1, -0.6, 0.5, 0.1, -0.6, 0.6, 0.1, -0.4, 0.6, 0.1, -0.4, 0.5, 0.1, 0.2, 0.7, 0.1, 0.5, 0.6, 0.1, 0.2, 0.6, 0.1, 0.2, 0.7, 0.1, 0.5, 0.7, 0.1, 0.5, 0.6, 0.1, -0.4, 0.7, -0.3, -0.3, 0.6, -0.3, -0.4, 0.6, -0.3, -0.4, 0.7, -0.3, -0.3, 0.7, -0.3, -0.3, 0.6, -0.3, -0.6, 1, -0.4, -0.5, 0.1, -0.4, -0.6, 0.1, -0.4, -0.6, 1, -0.4, -0.5, 0.6, -0.4, -0.5, 0.1, -0.4, -0.6, 1, -0.4, -0.5, 0.7, -0.4, -0.5, 0.6, -0.4, -0.6, 1, -0.4, -0.5, 1, -0.4, -0.5, 0.7, -0.4, -0.5, 0.7, -0.4, -0.4, 0.6, -0.4, -0.5, 0.6, -0.4, -0.5, 0.7, -0.4, -0.4, 0.7, -0.4, -0.4, 0.6, -0.4, -0.3, 0.7, -0.4, -0.2, 0.6, -0.4, -0.3, 0.6, -0.4, -0.3, 0.7, -0.4, -0.2, 0.7, -0.4, -0.2, 0.6, -0.4, 0.1, 0.7, -0.4, 0.2, 0.6, -0.4, 0.1, 0.6, -0.4, 0.1, 0.7, -0.4, 0.2, 0.7, -0.4, 0.2, 0.6, -0.4, -0.5, 0.1, -0.4, 0.4, 0, -0.4, -0.5, 0, -0.4, -0.5, 0.1, -0.4, 0.4, 0.1, -0.4, 0.4, 0, -0.4, -0.5, 1.1, -0.4, 0.4, 1, -0.4, -0.5, 1, -0.4, -0.5, 1.1, -0.4, 0.4, 1.1, -0.4, 0.4, 1, -0.4, 0.4, 1, -0.4, 0.5, 0.1, -0.4, 0.4, 0.1, -0.4, 0.4, 1, -0.4, 0.5, 1, -0.4, 0.5, 0.1, -0.4, -0.6, 1, 0.5, -0.6, 0.1, 0.5, -0.5, 0.1, 0.5, -0.6, 1, 0.5, -0.5, 0.1, 0.5, -0.5, 1, 0.5, -0.5, 0.1, 0.5, -0.5, 0, 0.5, 0.4, 0, 0.5, -0.5, 0.1, 0.5, 0.4, 0, 0.5, 0.4, 0.1, 0.5, -0.5, 1.1, 0.5, -0.5, 1, 0.5, 0.4, 1, 0.5, -0.5, 1.1, 0.5, 0.4, 1, 0.5, 0.4, 1.1, 0.5, 0.4, 1, 0.5, 0.4, 0.1, 0.5, 0.5, 0.1, 0.5, 0.4, 1, 0.5, 0.5, 0.1, 0.5, 0.5, 1, 0.5, -0.6, 1, 0, -0.6, 0.9, 0, -0.5, 0.9, 0, -0.6, 1, 0, -0.5, 0.9, 0, -0.5, 1, 0, -0.6, 0.6, 0, -0.6, 0.5, 0, -0.4, 0.5, 0, -0.6, 0.6, 0, -0.4, 0.5, 0, -0.4, 0.6, 0, 0.2, 0.7, 0, 0.2, 0.6, 0, 0.5, 0.6, 0, 0.2, 0.7, 0, 0.5, 0.6, 0, 0.5, 0.7, 0, -0.2, 0.1, -0.1, -0.2, 0, -0.1, 0.1, 0, -0.1, -0.2, 0.1, -0.1, 0.1, 0, -0.1, 0.1, 0.1, -0.1, -0.2, 1.1, -0.1, -0.2, 1, -0.1, 0.1, 1, -0.1, -0.2, 1.1, -0.1, 0.1, 1, -0.1, 0.1, 1.1, -0.1, -0.6, 1.1, -0.5, -0.6, 0, -0.5, -0.5, 0.1, -0.5, -0.6, 1.1, -0.5, -0.5, 0.1, -0.5, -0.5, 0.6, -0.5, -0.6, 1.1, -0.5, -0.5, 0.6, -0.5, -0.5, 0.7, -0.5, -0.6, 1.1, -0.5, -0.5, 0.7, -0.5, -0.5, 1, -0.5, -0.5, 0.7, -0.5, -0.5, 0.6, -0.5, -0.2, 0.6, -0.5, -0.5, 0.7, -0.5, -0.2, 0.6, -0.5, -0.2, 0.7, -0.5, 0.1, 0.7, -0.5, 0.1, 0.6, -0.5, 0.2, 0.6, -0.5, 0.1, 0.7, -0.5, 0.2, 0.6, -0.5, 0.2, 0.7, -0.5, -0.5, 0.1, -0.5, -0.6, 0, -0.5, 0.4, 0.1, -0.5, -0.6, 1.1, -0.5, -0.5, 1, -0.5, 0.4, 1, -0.5, 0.4, 0.1, -0.5, -0.6, 0, -0.5, 0.5, 0, -0.5, 0.4, 1, -0.5, 0.4, 0.1, -0.5, 0.5, 0, -0.5, -0.6, 1.1, -0.5, 0.4, 1, -0.5, 0.5, 1.1, -0.5, 0.4, 1, -0.5, 0.5, 0, -0.5, 0.5, 1.1, -0.5, 0.5, 0, 0.6, -0.5, 0, 0.5, -0.6, 0, 0.6, 0.5, 0, 0.6, 0.4, 0, 0.5, -0.5, 0, 0.5, 0.1, 0, 0.2, -0.2, 0, -0.1, -0.2, 0, 0.2, 0.1, 0, 0.2, 0.1, 0, -0.1, -0.2, 0, -0.1, -0.5, 0, 0.5, -0.5, 0, -0.4, -0.6, 0, 0.6, 0.5, 0, 0.6, 0.4, 0, -0.4, 0.4, 0, 0.5, -0.5, 0, -0.4, -0.6, 0, -0.5, -0.6, 0, 0.6, 0.4, 0, -0.4, -0.6, 0, -0.5, -0.5, 0, -0.4, 0.5, 0, 0.6, 0.5, 0, -0.5, 0.4, 0, -0.4, 0.4, 0, -0.4, 0.5, 0, -0.5, -0.6, 0, -0.5, -0.4, 0.5, 0.1, -0.6, 0.5, 0, -0.6, 0.5, 0.1, -0.4, 0.5, 0.1, -0.4, 0.5, 0, -0.6, 0.5, 0, 0.5, 0.6, 0.1, 0.2, 0.6, 0, 0.2, 0.6, 0.1, 0.5, 0.6, 0.1, 0.5, 0.6, 0, 0.2, 0.6, 0, -0.3, 0.6, -0.3, -0.4, 0.6, -0.4, -0.4, 0.6, -0.3, -0.3, 0.6, -0.3, -0.3, 0.6, -0.4, -0.4, 0.6, -0.4, -0.4, 0.6, -0.4, -0.5, 0.6, -0.5, -0.5, 0.6, -0.4, -0.3, 0.6, -0.4, -0.5, 0.6, -0.5, -0.4, 0.6, -0.4, -0.2, 0.6, -0.4, -0.5, 0.6, -0.5, -0.3, 0.6, -0.4, -0.2, 0.6, -0.4, -0.2, 0.6, -0.5, -0.5, 0.6, -0.5, 0.2, 0.6, -0.4, 0.1, 0.6, -0.5, 0.1, 0.6, -0.4, 0.2, 0.6, -0.4, 0.2, 0.6, -0.5, 0.1, 0.6, -0.5, -0.5, 0.9, 0.1, -0.6, 0.9, 0, -0.6, 0.9, 0.1, -0.5, 0.9, 0.1, -0.5, 0.9, 0, -0.6, 0.9, 0, 0.4, 1, 0.6, -0.5, 1, 0.5, -0.5, 1, 0.6, 0.4, 1, 0.6, 0.4, 1, 0.5, -0.5, 1, 0.5, -0.5, 1, 0.5, -0.6, 1, 0.1, -0.6, 1, 0.5, -0.5, 1, 0.5, -0.5, 1, 0.1, -0.6, 1, 0.1, 0.1, 1, 0.2, -0.2, 1, -0.1, -0.2, 1, 0.2, 0.1, 1, 0.2, 0.1, 1, -0.1, -0.2, 1, -0.1, -0.5, 1, 0, -0.6, 1, -0.4, -0.6, 1, 0, -0.5, 1, 0, -0.5, 1, -0.4, -0.6, 1, -0.4, 0.5, 1, 0.5, 0.4, 1, -0.4, 0.4, 1, 0.5, 0.5, 1, 0.5, 0.5, 1, -0.4, 0.4, 1, -0.4, 0.4, 1, -0.4, -0.5, 1, -0.5, -0.5, 1, -0.4, 0.4, 1, -0.4, 0.4, 1, -0.5, -0.5, 1, -0.5, 0.4, 0.1, 0.6, -0.5, 0.1, 0.6, -0.5, 0.1, 0.5, 0.4, 0.1, 0.6, -0.5, 0.1, 0.5, 0.4, 0.1, 0.5, 0.1, 0.1, 0.2, -0.2, 0.1, 0.2, -0.2, 0.1, -0.1, 0.1, 0.1, 0.2, -0.2, 0.1, -0.1, 0.1, 0.1, -0.1, -0.5, 0.1, 0.5, -0.6, 0.1, 0.5, -0.6, 0.1, -0.4, -0.5, 0.1, 0.5, -0.6, 0.1, -0.4, -0.5, 0.1, -0.4, 0.5, 0.1, 0.5, 0.4, 0.1, 0.5, 0.4, 0.1, -0.4, 0.5, 0.1, 0.5, 0.4, 0.1, -0.4, 0.5, 0.1, -0.4, 0.4, 0.1, -0.4, -0.5, 0.1, -0.4, -0.5, 0.1, -0.5, 0.4, 0.1, -0.4, -0.5, 0.1, -0.5, 0.4, 0.1, -0.5, -0.4, 0.6, 0.1, -0.6, 0.6, 0.1, -0.6, 0.6, 0, -0.4, 0.6, 0.1, -0.6, 0.6, 0, -0.4, 0.6, 0, 0.5, 0.7, 0.1, 0.2, 0.7, 0.1, 0.2, 0.7, 0, 0.5, 0.7, 0.1, 0.2, 0.7, 0, 0.5, 0.7, 0, -0.3, 0.7, -0.3, -0.4, 0.7, -0.3, -0.4, 0.7, -0.4, -0.3, 0.7, -0.3, -0.4, 0.7, -0.4, -0.3, 0.7, -0.4, -0.4, 0.7, -0.4, -0.5, 0.7, -0.4, -0.5, 0.7, -0.5, -0.3, 0.7, -0.4, -0.4, 0.7, -0.4, -0.5, 0.7, -0.5, -0.2, 0.7, -0.4, -0.3, 0.7, -0.4, -0.5, 0.7, -0.5, -0.2, 0.7, -0.4, -0.5, 0.7, -0.5, -0.2, 0.7, -0.5, 0.2, 0.7, -0.4, 0.1, 0.7, -0.4, 0.1, 0.7, -0.5, 0.2, 0.7, -0.4, 0.1, 0.7, -0.5, 0.2, 0.7, -0.5, 0.5, 1.1, 0.6, -0.6, 1.1, 0.6, -0.5, 1.1, 0.5, 0.5, 1.1, 0.6, -0.5, 1.1, 0.5, 0.4, 1.1, 0.5, 0.1, 1.1, 0.2, -0.2, 1.1, 0.2, -0.2, 1.1, -0.1, 0.1, 1.1, 0.2, -0.2, 1.1, -0.1, 0.1, 1.1, -0.1, -0.5, 1.1, 0.5, -0.6, 1.1, 0.6, -0.5, 1.1, -0.4, 0.5, 1.1, 0.6, 0.4, 1.1, 0.5, 0.4, 1.1, -0.4, -0.5, 1.1, -0.4, -0.6, 1.1, 0.6, -0.6, 1.1, -0.5, 0.4, 1.1, -0.4, -0.5, 1.1, -0.4, -0.6, 1.1, -0.5, 0.5, 1.1, 0.6, 0.4, 1.1, -0.4, 0.5, 1.1, -0.5, 0.4, 1.1, -0.4, -0.6, 1.1, -0.5, 0.5, 1.1, -0.5)

[node name="puzzle_box_test" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_iay8a")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.866024, -0.433016, 0.250001, 0, 0.499998, 0.866026, -0.500003, 0.749999, -0.43301, 0, 0, 0)
shadow_enabled = true

[node name="PuzzleBox" type="Area3D" parent="." node_paths=PackedStringArray("camera", "marker")]
script = ExtResource("1_f23ct")
camera = NodePath("../CameraPivot/Camera3D")
marker = NodePath("")

[node name="CollisionShape3D" type="CollisionShape3D" parent="PuzzleBox"]
shape = SubResource("BoxShape3D_xbf01")

[node name="PuzzleGeometry" type="StaticBody3D" parent="PuzzleBox"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="PuzzleBox/PuzzleGeometry"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.05, -0.55, -0.05)
mesh = ExtResource("3_6wrra")

[node name="CollisionShape3D" type="CollisionShape3D" parent="PuzzleBox/PuzzleGeometry"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.05, -0.55, -0.05)
shape = SubResource("ConcavePolygonShape3D_1gp36")

[node name="Player" parent="PuzzleBox" instance=ExtResource("2_201jb")]
continuous_cd = true
freeze = true

[node name="Goal" parent="PuzzleBox" instance=ExtResource("5_upn66")]

[node name="CameraPivot" type="Node3D" parent="."]
transform = Transform3D(-0.707107, -0.241845, 0.664463, 0, 0.939693, 0.34202, -0.707107, 0.241845, -0.664463, 0, 0, 0)
script = ExtResource("2_3wgyy")

[node name="Camera3D" type="Camera3D" parent="CameraPivot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 5)
fov = 24.0
size = 3.0

[connection signal="body_shape_exited" from="PuzzleBox" to="PuzzleBox" method="_on_body_shape_exited"]
[connection signal="rotate_event" from="PuzzleBox" to="PuzzleBox/Player" method="_on_puzzle_box_rotate_event"]
